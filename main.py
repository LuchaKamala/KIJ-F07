from DES import des
import Queue

des = des()

key = "irfan"
binary_key = des.stringToBinary(key)
binary_key = des.padding(binary_key)
permuted_key = des.convertToPermutedKey(binary_key)

# c = list(permuted_key[:28])
# d = list(permuted_key[28:])

c = '1111000011001100101010101111'
d = '0101010101100110011110001111'

c, d = des.shifts(c, d)

# print des.subkey[14] == '010111110100001110110111111100101110011100111010'

# STEP 2
message = '0000000100100011010001010110011110001001101010111100110111101111'
ip_message =  des.initiatePermutation(message)
des.left.append(ip_message[:32])
des.right.append(ip_message[32:])

# print des.calculateE(des.right[0]) == '011110100001010101010101011110100001010101010101'
# k = '000110110000001011101111111111000111000001110010'
# r = '011110100001010101010101011110100001010101010101'
# print des.xorKER(k, r) == '011000010001011110111010100001100110010100100111'

k = '000110110000001011101111111111000111000001110010'
r = '11110000101010101111000010101010'

print des.calculateF(r, k) == '00100011010010101010100110111011'
rl = '0000101001001100110110011001010101000011010000100011001000110100'
print des.inverseIP(rl) == '1000010111101000000100110101010000001111000010101011010000000101'